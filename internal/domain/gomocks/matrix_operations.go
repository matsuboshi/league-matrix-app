// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/matrix_operations.go

// Package gomocks is a generated GoMock package.
package gomocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/matsuboshi/league-matrix-app/internal/entity"
)

// MockMatrixOperationsDomainInterface is a mock of MatrixOperationsDomainInterface interface.
type MockMatrixOperationsDomainInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMatrixOperationsDomainInterfaceMockRecorder
}

// MockMatrixOperationsDomainInterfaceMockRecorder is the mock recorder for MockMatrixOperationsDomainInterface.
type MockMatrixOperationsDomainInterfaceMockRecorder struct {
	mock *MockMatrixOperationsDomainInterface
}

// NewMockMatrixOperationsDomainInterface creates a new mock instance.
func NewMockMatrixOperationsDomainInterface(ctrl *gomock.Controller) *MockMatrixOperationsDomainInterface {
	mock := &MockMatrixOperationsDomainInterface{ctrl: ctrl}
	mock.recorder = &MockMatrixOperationsDomainInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMatrixOperationsDomainInterface) EXPECT() *MockMatrixOperationsDomainInterfaceMockRecorder {
	return m.recorder
}

// IsValidOperation mocks base method.
func (m *MockMatrixOperationsDomainInterface) IsValidOperation(ctx context.Context, operation string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidOperation", ctx, operation)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsValidOperation indicates an expected call of IsValidOperation.
func (mr *MockMatrixOperationsDomainInterfaceMockRecorder) IsValidOperation(ctx, operation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidOperation", reflect.TypeOf((*MockMatrixOperationsDomainInterface)(nil).IsValidOperation), ctx, operation)
}

// ListOperations mocks base method.
func (m *MockMatrixOperationsDomainInterface) ListOperations() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListOperations")
	ret0, _ := ret[0].([]string)
	return ret0
}

// ListOperations indicates an expected call of ListOperations.
func (mr *MockMatrixOperationsDomainInterfaceMockRecorder) ListOperations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListOperations", reflect.TypeOf((*MockMatrixOperationsDomainInterface)(nil).ListOperations))
}

// RunOperation mocks base method.
func (m *MockMatrixOperationsDomainInterface) RunOperation(ctx context.Context, matrix *entity.Matrix, operation string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunOperation", ctx, matrix, operation)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunOperation indicates an expected call of RunOperation.
func (mr *MockMatrixOperationsDomainInterfaceMockRecorder) RunOperation(ctx, matrix, operation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunOperation", reflect.TypeOf((*MockMatrixOperationsDomainInterface)(nil).RunOperation), ctx, matrix, operation)
}
