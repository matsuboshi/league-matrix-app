// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/matrix.go

// Package gomocks is a generated GoMock package.
package gomocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/matsuboshi/league-matrix-app/internal/repository"
)

// MockMatrixRepositoryInterface is a mock of MatrixRepositoryInterface interface.
type MockMatrixRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMatrixRepositoryInterfaceMockRecorder
}

// MockMatrixRepositoryInterfaceMockRecorder is the mock recorder for MockMatrixRepositoryInterface.
type MockMatrixRepositoryInterfaceMockRecorder struct {
	mock *MockMatrixRepositoryInterface
}

// NewMockMatrixRepositoryInterface creates a new mock instance.
func NewMockMatrixRepositoryInterface(ctrl *gomock.Controller) *MockMatrixRepositoryInterface {
	mock := &MockMatrixRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockMatrixRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMatrixRepositoryInterface) EXPECT() *MockMatrixRepositoryInterfaceMockRecorder {
	return m.recorder
}

// GetFileContent mocks base method.
func (m *MockMatrixRepositoryInterface) GetFileContent(ctx context.Context, filePath string) (*repository.MatrixFileContent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileContent", ctx, filePath)
	ret0, _ := ret[0].(*repository.MatrixFileContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileContent indicates an expected call of GetFileContent.
func (mr *MockMatrixRepositoryInterfaceMockRecorder) GetFileContent(ctx, filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileContent", reflect.TypeOf((*MockMatrixRepositoryInterface)(nil).GetFileContent), ctx, filePath)
}
